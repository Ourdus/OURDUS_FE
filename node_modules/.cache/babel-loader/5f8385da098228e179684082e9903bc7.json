{"ast":null,"code":"import _objectSpread from\"/Users/Kimbangg/Desktop/OURDUS_FE/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import axios from'axios';export var instance=axios.create({});// instance.defaults.headers['Content-Type'] = 'application/json';\nexport var checkHeader=function checkHeader(){console.log(\"checkHeader:  \"+instance.defaults.headers.common['jwt-auth-token']);console.log(\"check에서 확인한 cookie는: \"+document.cookie);};export var setJwt=function setJwt(token){// 'jwt-auth-token' 자리는 백엔드에서 설정한 토큰 명을 삽입 해주어야 한다.\ninstance.defaults.headers.common['jwt-auth-token']=token;console.log(\"setJwt:  \"+instance.defaults.headers.common['jwt-auth-token']);// 새로고침을 할 때마다, 날라가는 것을 방지하기 위해 쿠기에 저장\nsetCookie('jwt-auth-token',token);console.log(\"set에서 확인한 cookie는: \"+document.cookie);//cookie setting\n};export var getJwt=function getJwt(uri){//cookie get, header에 새로 update\nconsole.log(\"getJwt:  \"+instance.defaults.headers.common['jwt-auth-token']);instance.defaults.headers.common['jwt-auth-token']=getCookie('jwt-auth-token');console.log(\"get에서 cookie로 넣어준:  \"+instance.defaults.headers.common['jwt-auth-token']);return axios.get(uri,{headers:{'jwt-auth-token':instance.defaults.headers.common['jwt-auth-token']}});};export var PostJwt=function PostJwt(uri,data){instance.defaults.headers.common['jwt-auth-token']=getCookie('jwt-auth-token');return axios.post(uri,data,{headers:{'jwt-auth-token':instance.defaults.headers.common['jwt-auth-token']}});};export var deleteJwt=function deleteJwt(uri){instance.defaults.headers.common['jwt-auth-token']=getCookie('jwt-auth-token');return axios.delete(uri,{headers:{'jwt-auth-token':instance.defaults.headers.common['jwt-auth-token']}});};export var LogoutJwt=function LogoutJwt(){deleteCookie('jwt-auth-token');delete instance.defaults.headers.common['jwt-auth-token'];};/*하단은 쿠키 사용 함수들, document.cookie 접근을 활용하며 정규표현식을 이용해 name을 구분한다.\n참고: https://ko.javascript.info/cookie\n*/function getCookie(name){var matches=document.cookie.match(new RegExp(\"(?:^|; )\"+name.replace(/([\\.$?*|{}\\(\\)\\[\\]\\\\\\/\\+^])/g,'\\\\$1')+\"=([^;]*)\"));return matches?decodeURIComponent(matches[1]):undefined;}function setCookie(name,value){var options=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{};options=_objectSpread({path:'/'},options);if(options.expires instanceof Date){options.expires=options.expires.toUTCString();}var updatedCookie=encodeURIComponent(name)+\"=\"+encodeURIComponent(value);for(var optionKey in options){updatedCookie+=\"; \"+optionKey;var optionValue=options[optionKey];if(optionValue!==true){updatedCookie+=\"=\"+optionValue;}}document.cookie=updatedCookie;}function deleteCookie(name){setCookie(name,\"\",{'max-age':-1});}// export default {instance, checkHeader, setJwt, getJwt, PostJwt};","map":{"version":3,"sources":["/Users/Kimbangg/Desktop/OURDUS_FE/src/components/views/LoginPage/TokenConfig.js"],"names":["axios","instance","create","checkHeader","console","log","defaults","headers","common","document","cookie","setJwt","token","setCookie","getJwt","uri","getCookie","get","PostJwt","data","post","deleteJwt","delete","LogoutJwt","deleteCookie","name","matches","match","RegExp","replace","decodeURIComponent","undefined","value","options","path","expires","Date","toUTCString","updatedCookie","encodeURIComponent","optionKey","optionValue"],"mappings":"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","sourcesContent":["import axios from 'axios';\n\nexport const instance = axios.create({\n    });\n// instance.defaults.headers['Content-Type'] = 'application/json';\n        \nexport const checkHeader = () => {\n    console.log(\"checkHeader:  \" + instance.defaults.headers.common['jwt-auth-token']);\n    console.log(\"check에서 확인한 cookie는: \" + document.cookie);\n}\n\nexport const setJwt = (token) => {\n    // 'jwt-auth-token' 자리는 백엔드에서 설정한 토큰 명을 삽입 해주어야 한다.\n    instance.defaults.headers.common['jwt-auth-token'] = token;\n    console.log(\"setJwt:  \" + instance.defaults.headers.common['jwt-auth-token']);\n    // 새로고침을 할 때마다, 날라가는 것을 방지하기 위해 쿠기에 저장\n    setCookie('jwt-auth-token', token);\n    console.log(\"set에서 확인한 cookie는: \" + document.cookie);\n    //cookie setting\n}\n\nexport const getJwt = (uri) => {\n    //cookie get, header에 새로 update\n    console.log(\"getJwt:  \" + instance.defaults.headers.common['jwt-auth-token']);\n    instance.defaults.headers.common['jwt-auth-token'] = getCookie('jwt-auth-token');\n    console.log(\"get에서 cookie로 넣어준:  \" + instance.defaults.headers.common['jwt-auth-token']);\n    return axios\n    .get(uri,{\n      headers:{\n      'jwt-auth-token': instance.defaults.headers.common['jwt-auth-token']\n      }\n    })\n}\n\nexport const PostJwt = (uri, data) => {\n    instance.defaults.headers.common['jwt-auth-token'] = getCookie('jwt-auth-token');\n    return axios.post(uri, data, {\n        headers: {\n            'jwt-auth-token': instance.defaults.headers.common['jwt-auth-token']\n        }\n    })\n}\n\nexport const deleteJwt = (uri) =>{\n    instance.defaults.headers.common['jwt-auth-token'] = getCookie('jwt-auth-token');\n    return axios.delete(uri, {\n      headers: {\n          'jwt-auth-token': instance.defaults.headers.common['jwt-auth-token']\n      }\n  })\n}\n\nexport const LogoutJwt = () =>{\n  deleteCookie('jwt-auth-token');\n  delete instance.defaults.headers.common['jwt-auth-token'];\n}\n\n\n/*하단은 쿠키 사용 함수들, document.cookie 접근을 활용하며 정규표현식을 이용해 name을 구분한다.\n참고: https://ko.javascript.info/cookie\n*/\n\nfunction getCookie(name) {\n    let matches = document.cookie.match(new RegExp(\n      \"(?:^|; )\" + name.replace(/([\\.$?*|{}\\(\\)\\[\\]\\\\\\/\\+^])/g, '\\\\$1') + \"=([^;]*)\"\n    ));\n    return matches ? decodeURIComponent(matches[1]) : undefined;\n  }\n\nfunction setCookie(name, value, options = {}) {\n\n    options = {\n      path: '/',\n      // 필요한 경우, 옵션 기본값을 설정할 수도 있습니다.\n      ...options\n    };\n  \n    if (options.expires instanceof Date) {\n      options.expires = options.expires.toUTCString();\n    }\n  \n    let updatedCookie = encodeURIComponent(name) + \"=\" + encodeURIComponent(value);\n  \n    for (let optionKey in options) {\n      updatedCookie += \"; \" + optionKey;\n      let optionValue = options[optionKey];\n      if (optionValue !== true) {\n        updatedCookie += \"=\" + optionValue;\n      }\n    }\n  \n    document.cookie = updatedCookie;\n}\n\nfunction deleteCookie(name) {\n    setCookie(name, \"\", {\n      'max-age': -1\n    })\n  }\n\n// export default {instance, checkHeader, setJwt, getJwt, PostJwt};\n"]},"metadata":{},"sourceType":"module"}