{"ast":null,"code":"import axios from 'axios';\n\nclass AuthenticationService {\n  // send username, password to the SERVER\n  executeJwtAuthenticationService(email, name, password, tel, point, writerFlag) {\n    const data = {\n      email,\n      name,\n      password,\n      tel,\n      writerFlag\n    };\n    return axios.post('api/user/join', data);\n  }\n\n  executeAddAddress(name, phone, zipcode, addressMain, addressSub) {\n    const token = localStorage.getItem('token');\n    const data = {\n      name,\n      phone,\n      zipcode,\n      addressMain,\n      addressSub\n    };\n    return axios.post(`/api/t/user/address/${i}`, data);\n  }\n\n  executeHelloService() {\n    console.log(\"===executeHelloService===\");\n  }\n\n  registerSuccessfulLoginForJwt(username, token) {\n    console.log(\"===registerSuccessfulLoginForJwt===\");\n    localStorage.setItem('token', token);\n    localStorage.setItem('authenticatedUser', username); // sessionStorage.setItem('authenticatedUser', username)\n    //this.setupAxiosInterceptors(this.createJWTToken(token))\n\n    this.setupAxiosInterceptors();\n  }\n\n  createJWTToken(token) {\n    return 'Bearer ' + token;\n  }\n\n  setupAxiosInterceptors() {\n    axios.interceptors.request.use(config => {\n      const token = localStorage.getItem('token');\n\n      if (token) {\n        config.headers['Authorization'] = 'Bearer ' + token;\n      } // config.headers['Content-Type'] = 'application/json';\n\n\n      return config;\n    }, error => {\n      Promise.reject(error);\n    });\n  }\n\n  logout() {\n    localStorage.removeItem(\"authenticatedUser\");\n    localStorage.removeItem(\"token\");\n  }\n\n  isUserLoggedIn() {\n    const token = localStorage.getItem('token');\n    console.log(\"===UserloggedInCheck===\");\n    console.log(token);\n\n    if (token) {\n      return true;\n    }\n\n    return false;\n  }\n\n  withdrawUser() {\n    const token = localStorage.getItem('token');\n    return axios.delete('api/t/user/delete', {\n      token\n    });\n  }\n\n  sendUserToken() {\n    const token = localStorage.getItem('token');\n    return axios.get('/api/t/user/address', {\n      token\n    });\n  }\n\n  getLoggedInUserName() {\n    //let user = sessionStorage.getItem('authenticatedUser')\n    let user = localStorage.getItem('authenticatedUser');\n    if (user === null) return '';\n    return user;\n  }\n\n}\n\nexport default new AuthenticationService();","map":{"version":3,"sources":["/Users/Kimbangg/Desktop/OURDUS_FE/src/components/views/LoginPage/ AuthenticationService.js"],"names":["axios","AuthenticationService","executeJwtAuthenticationService","email","name","password","tel","point","writerFlag","data","post","executeAddAddress","phone","zipcode","addressMain","addressSub","token","localStorage","getItem","i","executeHelloService","console","log","registerSuccessfulLoginForJwt","username","setItem","setupAxiosInterceptors","createJWTToken","interceptors","request","use","config","headers","error","Promise","reject","logout","removeItem","isUserLoggedIn","withdrawUser","delete","sendUserToken","get","getLoggedInUserName","user"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,qBAAN,CAA4B;AACxB;AACAC,EAAAA,+BAA+B,CAACC,KAAD,EAAQC,IAAR,EAAcC,QAAd,EAAuBC,GAAvB,EAA4BC,KAA5B,EAAmCC,UAAnC,EAA+C;AAC1E,UAAMC,IAAI,GAAG;AACTN,MAAAA,KADS;AAETC,MAAAA,IAFS;AAGTC,MAAAA,QAHS;AAITC,MAAAA,GAJS;AAKTE,MAAAA;AALS,KAAb;AAOA,WAAOR,KAAK,CAACU,IAAN,CAAW,eAAX,EAA4BD,IAA5B,CAAP;AACH;;AAEDE,EAAAA,iBAAiB,CAACP,IAAD,EAAMQ,KAAN,EAAYC,OAAZ,EAAoBC,WAApB,EAAgCC,UAAhC,EAA4C;AACzD,UAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;AACA,UAAMT,IAAI,GAAG;AACTL,MAAAA,IADS;AAETQ,MAAAA,KAFS;AAGTC,MAAAA,OAHS;AAITC,MAAAA,WAJS;AAKTC,MAAAA;AALS,KAAb;AAOA,WAAOf,KAAK,CAACU,IAAN,CAAY,uBAAsBS,CAAE,EAApC,EAAuCV,IAAvC,CAAP;AACH;;AAEDW,EAAAA,mBAAmB,GAAG;AAClBC,IAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ;AACH;;AAEDC,EAAAA,6BAA6B,CAACC,QAAD,EAAWR,KAAX,EAAkB;AAC3CK,IAAAA,OAAO,CAACC,GAAR,CAAY,qCAAZ;AACAL,IAAAA,YAAY,CAACQ,OAAb,CAAqB,OAArB,EAA8BT,KAA9B;AACAC,IAAAA,YAAY,CAACQ,OAAb,CAAqB,mBAArB,EAA0CD,QAA1C,EAH2C,CAI3C;AACA;;AACA,SAAKE,sBAAL;AACH;;AAEDC,EAAAA,cAAc,CAACX,KAAD,EAAQ;AAClB,WAAO,YAAYA,KAAnB;AACH;;AAEDU,EAAAA,sBAAsB,GAAG;AACrB1B,IAAAA,KAAK,CAAC4B,YAAN,CAAmBC,OAAnB,CAA2BC,GAA3B,CACIC,MAAM,IAAI;AACN,YAAMf,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;;AACA,UAAIF,KAAJ,EAAW;AACPe,QAAAA,MAAM,CAACC,OAAP,CAAe,eAAf,IAAkC,YAAYhB,KAA9C;AACH,OAJK,CAKN;;;AACA,aAAOe,MAAP;AACH,KARL,EASIE,KAAK,IAAI;AACLC,MAAAA,OAAO,CAACC,MAAR,CAAeF,KAAf;AACH,KAXL;AAYH;;AAEDG,EAAAA,MAAM,GAAG;AACLnB,IAAAA,YAAY,CAACoB,UAAb,CAAwB,mBAAxB;AACApB,IAAAA,YAAY,CAACoB,UAAb,CAAwB,OAAxB;AACH;;AAEDC,EAAAA,cAAc,GAAG;AACb,UAAMtB,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYN,KAAZ;;AAEA,QAAIA,KAAJ,EAAW;AACP,aAAO,IAAP;AACH;;AAED,WAAO,KAAP;AACH;;AAEDuB,EAAAA,YAAY,GAAG;AACX,UAAMvB,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;AACA,WAAOlB,KAAK,CAACwC,MAAN,CAAa,mBAAb,EAAkC;AACrCxB,MAAAA;AADqC,KAAlC,CAAP;AAGH;;AACDyB,EAAAA,aAAa,GAAG;AACZ,UAAMzB,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;AACA,WAAOlB,KAAK,CAAC0C,GAAN,CAAU,qBAAV,EAAiC;AACpC1B,MAAAA;AADoC,KAAjC,CAAP;AAGH;;AAED2B,EAAAA,mBAAmB,GAAG;AAClB;AACA,QAAIC,IAAI,GAAG3B,YAAY,CAACC,OAAb,CAAqB,mBAArB,CAAX;AACA,QAAG0B,IAAI,KAAG,IAAV,EAAgB,OAAO,EAAP;AAChB,WAAOA,IAAP;AACH;;AA5FuB;;AA+F5B,eAAe,IAAI3C,qBAAJ,EAAf","sourcesContent":["import axios from 'axios'\n\nclass AuthenticationService {\n    // send username, password to the SERVER\n    executeJwtAuthenticationService(email, name, password,tel, point, writerFlag) {\n        const data = {\n            email, \n            name, \n            password,\n            tel, \n            writerFlag\n          }\n        return axios.post('api/user/join', data)\n    }\n\n    executeAddAddress(name,phone,zipcode,addressMain,addressSub) {\n        const token = localStorage.getItem('token');\n        const data = {\n            name,\n            phone,\n            zipcode,\n            addressMain,\n            addressSub\n          }\n        return axios.post(`/api/t/user/address/${i}`, data)\n    }\n\n    executeHelloService() {\n        console.log(\"===executeHelloService===\")    \n    }\n\n    registerSuccessfulLoginForJwt(username, token) {\n        console.log(\"===registerSuccessfulLoginForJwt===\")\n        localStorage.setItem('token', token);\n        localStorage.setItem('authenticatedUser', username);\n        // sessionStorage.setItem('authenticatedUser', username)\n        //this.setupAxiosInterceptors(this.createJWTToken(token))\n        this.setupAxiosInterceptors();\n    }\n\n    createJWTToken(token) {\n        return 'Bearer ' + token\n    }\n\n    setupAxiosInterceptors() {\n        axios.interceptors.request.use(\n            config => {\n                const token = localStorage.getItem('token');\n                if (token) {\n                    config.headers['Authorization'] = 'Bearer ' + token;\n                }\n                // config.headers['Content-Type'] = 'application/json';\n                return config;\n            },\n            error => {\n                Promise.reject(error)\n            });\n    }\n\n    logout() {\n        localStorage.removeItem(\"authenticatedUser\");\n        localStorage.removeItem(\"token\");\n    }\n\n    isUserLoggedIn() {\n        const token = localStorage.getItem('token');\n        console.log(\"===UserloggedInCheck===\");\n        console.log(token);\n\n        if (token) {\n            return true;\n        }\n        \n        return false;\n    }\n\n    withdrawUser() {\n        const token = localStorage.getItem('token');\n        return axios.delete('api/t/user/delete', {\n            token\n        })\n    }\n    sendUserToken() {\n        const token = localStorage.getItem('token');\n        return axios.get('/api/t/user/address', {\n            token\n        })\n    }\n\n    getLoggedInUserName() {\n        //let user = sessionStorage.getItem('authenticatedUser')\n        let user = localStorage.getItem('authenticatedUser');\n        if(user===null) return '';\n        return user;\n    }\n}\n\nexport default new AuthenticationService()"]},"metadata":{},"sourceType":"module"}