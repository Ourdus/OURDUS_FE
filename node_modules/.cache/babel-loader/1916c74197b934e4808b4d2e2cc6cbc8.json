{"ast":null,"code":"import _classCallCheck from\"/Users/Kimbangg/Desktop/OURDUS_FE/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/Kimbangg/Desktop/OURDUS_FE/node_modules/@babel/runtime/helpers/esm/createClass\";import axios from'axios';var AuthenticationService=/*#__PURE__*/function(){function AuthenticationService(){_classCallCheck(this,AuthenticationService);}_createClass(AuthenticationService,[{key:\"executeJwtAuthenticationService\",// send username, password to the SERVER\nvalue:function executeJwtAuthenticationService(email,name,password,tel,point,writerFlag){var data={email:email,name:name,password:password,tel:tel,writerFlag:writerFlag};return axios.post('api/user/join',data);}},{key:\"executeAddAddress\",value:function executeAddAddress(name,phone,zipcode,addressMain,addressSub){var token=localStorage.getItem('token');var data={name:name,phone:phone,zipcode:zipcode,addressMain:addressMain,addressSub:addressSub};return axios.post('api/user/join',data);}},{key:\"executeHelloService\",value:function executeHelloService(){console.log(\"===executeHelloService===\");}},{key:\"registerSuccessfulLoginForJwt\",value:function registerSuccessfulLoginForJwt(username,token){console.log(\"===registerSuccessfulLoginForJwt===\");localStorage.setItem('token',token);localStorage.setItem('authenticatedUser',username);// sessionStorage.setItem('authenticatedUser', username)\n//this.setupAxiosInterceptors(this.createJWTToken(token))\nthis.setupAxiosInterceptors();}},{key:\"createJWTToken\",value:function createJWTToken(token){return'Bearer '+token;}},{key:\"setupAxiosInterceptors\",value:function setupAxiosInterceptors(){axios.interceptors.request.use(function(config){var token=localStorage.getItem('token');if(token){config.headers['jwt-auth-token']='Bearer '+token;}// config.headers['Content-Type'] = 'application/json';\nreturn config;},function(error){Promise.reject(error);});}},{key:\"logout\",value:function logout(){localStorage.removeItem(\"authenticatedUser\");localStorage.removeItem(\"token\");}},{key:\"isUserLoggedIn\",value:function isUserLoggedIn(){var token=localStorage.getItem('token');console.log(\"===UserloggedInCheck===\");console.log(token);if(token){return true;}return false;}},{key:\"withdrawUser\",value:function withdrawUser(){var token=localStorage.getItem('token');return axios.delete('api/t/user/delete',{token:token});}},{key:\"sendUserToken\",value:function sendUserToken(){var token=localStorage.getItem('token');return axios.get('/api/t/user/address',{token:token});}},{key:\"getLoggedInUserName\",value:function getLoggedInUserName(){//let user = sessionStorage.getItem('authenticatedUser')\nvar user=localStorage.getItem('authenticatedUser');if(user===null)return'';return user;}}]);return AuthenticationService;}();export default new AuthenticationService();","map":{"version":3,"sources":["/Users/Kimbangg/Desktop/OURDUS_FE/src/components/views/LoginPage/ AuthenticationService.js"],"names":["axios","AuthenticationService","email","name","password","tel","point","writerFlag","data","post","phone","zipcode","addressMain","addressSub","token","localStorage","getItem","console","log","username","setItem","setupAxiosInterceptors","interceptors","request","use","config","headers","error","Promise","reject","removeItem","delete","get","user"],"mappings":"sOAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,C,GAEMC,CAAAA,qB,kLACF;+CACgCC,K,CAAOC,I,CAAMC,Q,CAASC,G,CAAKC,K,CAAOC,U,CAAY,CAC1E,GAAMC,CAAAA,IAAI,CAAG,CACTN,KAAK,CAALA,KADS,CAETC,IAAI,CAAJA,IAFS,CAGTC,QAAQ,CAARA,QAHS,CAITC,GAAG,CAAHA,GAJS,CAKTE,UAAU,CAAVA,UALS,CAAb,CAOA,MAAOP,CAAAA,KAAK,CAACS,IAAN,CAAW,eAAX,CAA4BD,IAA5B,CAAP,CACH,C,4DAEiBL,I,CAAKO,K,CAAMC,O,CAAQC,W,CAAYC,U,CAAY,CACzD,GAAMC,CAAAA,KAAK,CAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd,CACA,GAAMR,CAAAA,IAAI,CAAG,CACTL,IAAI,CAAJA,IADS,CAETO,KAAK,CAALA,KAFS,CAGTC,OAAO,CAAPA,OAHS,CAITC,WAAW,CAAXA,WAJS,CAKTC,UAAU,CAAVA,UALS,CAAb,CAOA,MAAOb,CAAAA,KAAK,CAACS,IAAN,CAAW,eAAX,CAA4BD,IAA5B,CAAP,CACH,C,iEAEqB,CAClBS,OAAO,CAACC,GAAR,CAAY,2BAAZ,EACH,C,oFAE6BC,Q,CAAUL,K,CAAO,CAC3CG,OAAO,CAACC,GAAR,CAAY,qCAAZ,EACAH,YAAY,CAACK,OAAb,CAAqB,OAArB,CAA8BN,KAA9B,EACAC,YAAY,CAACK,OAAb,CAAqB,mBAArB,CAA0CD,QAA1C,EACA;AACA;AACA,KAAKE,sBAAL,GACH,C,sDAEcP,K,CAAO,CAClB,MAAO,UAAYA,KAAnB,CACH,C,uEAEwB,CACrBd,KAAK,CAACsB,YAAN,CAAmBC,OAAnB,CAA2BC,GAA3B,CACI,SAAAC,MAAM,CAAI,CACN,GAAMX,CAAAA,KAAK,CAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd,CACA,GAAIF,KAAJ,CAAW,CACPW,MAAM,CAACC,OAAP,CAAe,gBAAf,EAAmC,UAAYZ,KAA/C,CACH,CACD;AACA,MAAOW,CAAAA,MAAP,CACH,CARL,CASI,SAAAE,KAAK,CAAI,CACLC,OAAO,CAACC,MAAR,CAAeF,KAAf,EACH,CAXL,EAYH,C,uCAEQ,CACLZ,YAAY,CAACe,UAAb,CAAwB,mBAAxB,EACAf,YAAY,CAACe,UAAb,CAAwB,OAAxB,EACH,C,uDAEgB,CACb,GAAMhB,CAAAA,KAAK,CAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd,CACAC,OAAO,CAACC,GAAR,CAAY,yBAAZ,EACAD,OAAO,CAACC,GAAR,CAAYJ,KAAZ,EAEA,GAAIA,KAAJ,CAAW,CACP,MAAO,KAAP,CACH,CAED,MAAO,MAAP,CACH,C,mDAEc,CACX,GAAMA,CAAAA,KAAK,CAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd,CACA,MAAOhB,CAAAA,KAAK,CAAC+B,MAAN,CAAa,mBAAb,CAAkC,CACrCjB,KAAK,CAALA,KADqC,CAAlC,CAAP,CAGH,C,qDACe,CACZ,GAAMA,CAAAA,KAAK,CAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd,CACA,MAAOhB,CAAAA,KAAK,CAACgC,GAAN,CAAU,qBAAV,CAAiC,CACpClB,KAAK,CAALA,KADoC,CAAjC,CAAP,CAGH,C,iEAEqB,CAClB;AACA,GAAImB,CAAAA,IAAI,CAAGlB,YAAY,CAACC,OAAb,CAAqB,mBAArB,CAAX,CACA,GAAGiB,IAAI,GAAG,IAAV,CAAgB,MAAO,EAAP,CAChB,MAAOA,CAAAA,IAAP,CACH,C,qCAGL,cAAe,IAAIhC,CAAAA,qBAAJ,EAAf","sourcesContent":["import axios from 'axios';\n\nclass AuthenticationService {\n    // send username, password to the SERVER\n    executeJwtAuthenticationService(email, name, password,tel, point, writerFlag) {\n        const data = {\n            email, \n            name, \n            password,\n            tel, \n            writerFlag\n          }\n        return axios.post('api/user/join', data)\n    }\n\n    executeAddAddress(name,phone,zipcode,addressMain,addressSub) {\n        const token = localStorage.getItem('token');\n        const data = {\n            name,\n            phone,\n            zipcode,\n            addressMain,\n            addressSub\n          }\n        return axios.post('api/user/join', data)\n    }\n\n    executeHelloService() {\n        console.log(\"===executeHelloService===\")    \n    }\n\n    registerSuccessfulLoginForJwt(username, token) {\n        console.log(\"===registerSuccessfulLoginForJwt===\")\n        localStorage.setItem('token', token);\n        localStorage.setItem('authenticatedUser', username);\n        // sessionStorage.setItem('authenticatedUser', username)\n        //this.setupAxiosInterceptors(this.createJWTToken(token))\n        this.setupAxiosInterceptors();\n    }\n\n    createJWTToken(token) {\n        return 'Bearer ' + token\n    }\n\n    setupAxiosInterceptors() {\n        axios.interceptors.request.use(\n            config => {\n                const token = localStorage.getItem('token');\n                if (token) {\n                    config.headers['jwt-auth-token'] = 'Bearer ' + token;\n                }\n                // config.headers['Content-Type'] = 'application/json';\n                return config;\n            },\n            error => {\n                Promise.reject(error)\n            });\n    }\n\n    logout() {\n        localStorage.removeItem(\"authenticatedUser\");\n        localStorage.removeItem(\"token\");\n    }\n\n    isUserLoggedIn() {\n        const token = localStorage.getItem('token');\n        console.log(\"===UserloggedInCheck===\");\n        console.log(token);\n\n        if (token) {\n            return true;\n        }\n        \n        return false;\n    }\n\n    withdrawUser() {\n        const token = localStorage.getItem('token');\n        return axios.delete('api/t/user/delete', {\n            token\n        })\n    }\n    sendUserToken() {\n        const token = localStorage.getItem('token');\n        return axios.get('/api/t/user/address', {\n            token\n        })\n    }\n\n    getLoggedInUserName() {\n        //let user = sessionStorage.getItem('authenticatedUser')\n        let user = localStorage.getItem('authenticatedUser');\n        if(user===null) return '';\n        return user;\n    }\n}\n\nexport default new AuthenticationService()"]},"metadata":{},"sourceType":"module"}