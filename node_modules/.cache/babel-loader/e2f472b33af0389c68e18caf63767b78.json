{"ast":null,"code":"import axios from 'axios';\n\nclass AuthenticationService {\n  // send username, password to the SERVER\n  PostSignupInfo(email, name, password, tel, writerFlag) {\n    const data = {\n      email,\n      name,\n      password,\n      tel,\n      writerFlag\n    };\n    return axios.post('api/user/join', data);\n  }\n\n  PostLoginInfo(email, password) {\n    const data = {\n      email,\n      password\n    };\n    return axios.post('api/user/login', data);\n  }\n\n  executeAddAddress(name, phone, zipcode, addressMain, addressSub) {\n    const token = localStorage.getItem('token');\n    const data = {\n      name,\n      phone,\n      zipcode,\n      addressMain,\n      addressSub\n    };\n    return axios.post('api/user/join', data);\n  }\n\n  executeHelloService() {\n    console.log(\"===executeHelloService===\");\n  }\n\n  registerSuccessfulLoginForJwt(username, token) {\n    console.log(\"===registerSuccessfulLoginForJwt===\");\n    localStorage.setItem('token', token);\n    localStorage.setItem('authenticatedUser', username); // sessionStorage.setItem('authenticatedUser', username)\n    //this.setupAxiosInterceptors(this.createJWTToken(token))\n\n    this.setupAxiosInterceptors();\n  }\n\n  logout() {\n    localStorage.removeItem(\"authenticatedUser\");\n    localStorage.removeItem(\"token\");\n  }\n\n  isUserLoggedIn() {\n    const token = localStorage.getItem('token');\n    console.log(\"===UserloggedInCheck===\");\n    console.log(token);\n\n    if (token) {\n      return true;\n    }\n\n    return false;\n  }\n\n  withdrawUser() {\n    const token = localStorage.getItem('token');\n    return axios.delete('api/t/user/delete', {\n      token\n    });\n  }\n\n  sendUserToken() {\n    const token = localStorage.getItem('token');\n    return axios.get('/api/t/user/address', {\n      token\n    });\n  }\n\n  getLoggedInUserName() {\n    //let user = sessionStorage.getItem('authenticatedUser')\n    let user = localStorage.getItem('authenticatedUser');\n    if (user === null) return '';\n    return user;\n  }\n\n}\n\nexport default new AuthenticationService();","map":{"version":3,"sources":["/Users/Kimbangg/Desktop/OURDUS_FE/src/components/views/LoginPage/ AuthenticationService.js"],"names":["axios","AuthenticationService","PostSignupInfo","email","name","password","tel","writerFlag","data","post","PostLoginInfo","executeAddAddress","phone","zipcode","addressMain","addressSub","token","localStorage","getItem","executeHelloService","console","log","registerSuccessfulLoginForJwt","username","setItem","setupAxiosInterceptors","logout","removeItem","isUserLoggedIn","withdrawUser","delete","sendUserToken","get","getLoggedInUserName","user"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,qBAAN,CAA4B;AACxB;AACAC,EAAAA,cAAc,CAACC,KAAD,EAAQC,IAAR,EAAcC,QAAd,EAAuBC,GAAvB,EAA2BC,UAA3B,EAAuC;AACjD,UAAMC,IAAI,GAAG;AACTL,MAAAA,KADS;AAETC,MAAAA,IAFS;AAGTC,MAAAA,QAHS;AAITC,MAAAA,GAJS;AAKTC,MAAAA;AALS,KAAb;AAOA,WAAOP,KAAK,CAACS,IAAN,CAAW,eAAX,EAA4BD,IAA5B,CAAP;AACH;;AAEDE,EAAAA,aAAa,CAACP,KAAD,EAAQE,QAAR,EAAkB;AAC3B,UAAMG,IAAI,GAAG;AACTL,MAAAA,KADS;AAETE,MAAAA;AAFS,KAAb;AAIA,WAAOL,KAAK,CAACS,IAAN,CAAW,gBAAX,EAA6BD,IAA7B,CAAP;AACH;;AAEDG,EAAAA,iBAAiB,CAACP,IAAD,EAAMQ,KAAN,EAAYC,OAAZ,EAAoBC,WAApB,EAAgCC,UAAhC,EAA4C;AACzD,UAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;AACA,UAAMV,IAAI,GAAG;AACTJ,MAAAA,IADS;AAETQ,MAAAA,KAFS;AAGTC,MAAAA,OAHS;AAITC,MAAAA,WAJS;AAKTC,MAAAA;AALS,KAAb;AAOA,WAAOf,KAAK,CAACS,IAAN,CAAW,eAAX,EAA4BD,IAA5B,CAAP;AACH;;AAEDW,EAAAA,mBAAmB,GAAG;AAClBC,IAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ;AACH;;AAEDC,EAAAA,6BAA6B,CAACC,QAAD,EAAWP,KAAX,EAAkB;AAC3CI,IAAAA,OAAO,CAACC,GAAR,CAAY,qCAAZ;AACAJ,IAAAA,YAAY,CAACO,OAAb,CAAqB,OAArB,EAA8BR,KAA9B;AACAC,IAAAA,YAAY,CAACO,OAAb,CAAqB,mBAArB,EAA0CD,QAA1C,EAH2C,CAI3C;AACA;;AACA,SAAKE,sBAAL;AACH;;AAEDC,EAAAA,MAAM,GAAG;AACLT,IAAAA,YAAY,CAACU,UAAb,CAAwB,mBAAxB;AACAV,IAAAA,YAAY,CAACU,UAAb,CAAwB,OAAxB;AACH;;AAEDC,EAAAA,cAAc,GAAG;AACb,UAAMZ,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYL,KAAZ;;AAEA,QAAIA,KAAJ,EAAW;AACP,aAAO,IAAP;AACH;;AAED,WAAO,KAAP;AACH;;AAEDa,EAAAA,YAAY,GAAG;AACX,UAAMb,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;AACA,WAAOlB,KAAK,CAAC8B,MAAN,CAAa,mBAAb,EAAkC;AACrCd,MAAAA;AADqC,KAAlC,CAAP;AAGH;;AACDe,EAAAA,aAAa,GAAG;AACZ,UAAMf,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;AACA,WAAOlB,KAAK,CAACgC,GAAN,CAAU,qBAAV,EAAiC;AACpChB,MAAAA;AADoC,KAAjC,CAAP;AAGH;;AAEDiB,EAAAA,mBAAmB,GAAG;AAClB;AACA,QAAIC,IAAI,GAAGjB,YAAY,CAACC,OAAb,CAAqB,mBAArB,CAAX;AACA,QAAGgB,IAAI,KAAG,IAAV,EAAgB,OAAO,EAAP;AAChB,WAAOA,IAAP;AACH;;AAjFuB;;AAoF5B,eAAe,IAAIjC,qBAAJ,EAAf","sourcesContent":["import axios from 'axios';\n\nclass AuthenticationService {\n    // send username, password to the SERVER\n    PostSignupInfo(email, name, password,tel,writerFlag) {\n        const data = {\n            email, \n            name, \n            password,\n            tel, \n            writerFlag\n          }\n        return axios.post('api/user/join', data)\n    }\n\n    PostLoginInfo(email, password) {\n        const data = {\n            email,\n            password\n        }\n        return axios.post('api/user/login', data)\n    }\n\n    executeAddAddress(name,phone,zipcode,addressMain,addressSub) {\n        const token = localStorage.getItem('token');\n        const data = {\n            name,\n            phone,\n            zipcode,\n            addressMain,\n            addressSub\n          }\n        return axios.post('api/user/join', data)\n    }\n\n    executeHelloService() {\n        console.log(\"===executeHelloService===\")    \n    }\n\n    registerSuccessfulLoginForJwt(username, token) {\n        console.log(\"===registerSuccessfulLoginForJwt===\")\n        localStorage.setItem('token', token);\n        localStorage.setItem('authenticatedUser', username);\n        // sessionStorage.setItem('authenticatedUser', username)\n        //this.setupAxiosInterceptors(this.createJWTToken(token))\n        this.setupAxiosInterceptors();\n    }\n\n    logout() {\n        localStorage.removeItem(\"authenticatedUser\");\n        localStorage.removeItem(\"token\");\n    }\n\n    isUserLoggedIn() {\n        const token = localStorage.getItem('token');\n        console.log(\"===UserloggedInCheck===\");\n        console.log(token);\n\n        if (token) {\n            return true;\n        }\n        \n        return false;\n    }\n\n    withdrawUser() {\n        const token = localStorage.getItem('token');\n        return axios.delete('api/t/user/delete', {\n            token\n        })\n    }\n    sendUserToken() {\n        const token = localStorage.getItem('token');\n        return axios.get('/api/t/user/address', {\n            token\n        })\n    }\n\n    getLoggedInUserName() {\n        //let user = sessionStorage.getItem('authenticatedUser')\n        let user = localStorage.getItem('authenticatedUser');\n        if(user===null) return '';\n        return user;\n    }\n}\n\nexport default new AuthenticationService()"]},"metadata":{},"sourceType":"module"}